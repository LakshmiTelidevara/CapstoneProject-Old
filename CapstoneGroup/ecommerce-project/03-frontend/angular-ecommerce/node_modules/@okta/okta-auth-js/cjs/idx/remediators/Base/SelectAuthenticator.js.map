{"version":3,"sources":["../../../../../lib/idx/remediators/Base/SelectAuthenticator.ts"],"names":["SelectAuthenticator","Remediator","authenticator","findMatchedOption","authenticators","options","option","relatesTo","key","canRemediate","authenticatorFromRemediation","remediation","length","matchedOption","getNextStep","common","label","value","mapAuthenticator","remediationValue","selectedOption","selectedAuthenticator","id","form","name","getInputAuthenticator","getValuesAfterProceed","values"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxAuthenticator, IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator } from '../../types';\n\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator extends Remediator {\n  values!: SelectAuthenticatorValues;\n  selectedAuthenticator?: IdxAuthenticator;\n  selectedOption?: any;\n  \n  map = {\n    authenticator: []\n  }\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators } = this.values;\n    const { options } = remediationValue;\n    const selectedOption = this.findMatchedOption(authenticators, options);\n    // track the selected authenticator\n    this.selectedAuthenticator = selectedOption.relatesTo;\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n  getValuesAfterProceed(): RemediationValues {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return authenticator.key !== this.selectedAuthenticator!.key; \n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n"],"file":"SelectAuthenticator.js"}