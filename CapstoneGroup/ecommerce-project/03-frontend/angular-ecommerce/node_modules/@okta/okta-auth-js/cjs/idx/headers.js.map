{"version":3,"sources":["../../../lib/idx/headers.ts"],"names":["setGlobalRequestInterceptor","fn","idx","client","interceptors","request","use","clearGlobalRequestInterceptor","clear","createGlobalRequestInterceptor","sdk","requestConfig","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","headers","options","forEach","name","clientSecret"],"mappings":";;;;;;;;;;;;AAkBA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGO,SAASA,2BAAT,CAAqCC,EAArC,EAAyC;AAC9CC,iBAAIC,MAAJ,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoCL,EAApC;AACD;;AAEM,SAASM,6BAAT,GAAyC;AAC9CL,iBAAIC,MAAJ,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCG,KAAhC;AACD,C,CAED;;;AACO,SAASC,8BAAT,CAAwCC,GAAxC,EAAgE;AACrE,SAAO,UAAUC,aAAV,EAAyB;AAC9B;AACA,QAAIC,mBAAmB,GAAGF,GAAG,CAACG,cAAJ,CAAmBC,aAAnB,EAA1B;;AACA,UAAMC,OAAO,GAAG,qBAAc,EAC5B,GAAGH;AADyB,KAAd,EAEbF,GAAG,CAACM,OAAJ,CAAYD,OAFC,CAAhB;AAGA,uBAAYA,OAAZ,EAAqBE,OAArB,CAA6BC,IAAI,IAAI;AACnC;AACA;AACA;AACA,UAAI,CAACR,GAAG,CAACM,OAAJ,CAAYG,YAAb,IAA6BD,IAAI,KAAK,gBAA1C,EAA4D;AAC1D;AACD;;AACDP,MAAAA,aAAa,CAACI,OAAd,CAAsBG,IAAtB,IAA8BH,OAAO,CAACG,IAAD,CAArC;AACD,KARD;AASD,GAfD;AAgBD","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// BETA - SUBJECT TO CHANGE\n// Currently we must modify request headers using the single instance of `idx.client.interceptors` exported from IDX-JS\n// This means that multiple instances of OktaAuth will see the same header modifications\n// TODO: use AuthJS http agent for IDX API requests. OKTA-417473\nimport { OktaAuthInterface } from '../types';\nimport idx from './idx-js';\nexport function setGlobalRequestInterceptor(fn) {\n  idx.client.interceptors.request.use(fn);\n}\n\nexport function clearGlobalRequestInterceptor() {\n  idx.client.interceptors.request.clear();\n}\n\n// A factory which returns a function that can be passed to `setGlobalRequestInterceptor`\nexport function createGlobalRequestInterceptor(sdk: OktaAuthInterface) {\n  return function (requestConfig) {\n    // Set user-agent and any other custom headers set in the options\n    var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n    const headers = Object.assign({\n      ...oktaUserAgentHeader\n    }, sdk.options.headers);\n    Object.keys(headers).forEach(name => {\n      // X-Device-Token may only be specified if the /interact request includes a `client_secret`\n      // which indicates a trusted client which is allowed to present this information on behalf of the end user. \n      // https://oktainc.atlassian.net/browse/OKTA-441021\n      if (!sdk.options.clientSecret && name === 'X-Device-Token') {\n        return;\n      }\n      requestConfig.headers[name] = headers[name];\n    });\n  };\n}\n"],"file":"headers.js"}