"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

exports.default = void 0;

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/json/stringify"));

var _client = require("./client");

var _util = require("./util");

/*!
 * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
const parseAndReject = response => response.json().then(err => _promise.default.reject(err));

const introspect = async function introspect({
  withCredentials,
  domain,
  interactionHandle,
  stateHandle,
  version
}) {
  (0, _util.validateVersionConfig)(version);
  const target = `${domain}/idp/idx/introspect`;
  const body = stateHandle ? {
    stateToken: stateHandle
  } : {
    interactionHandle
  };
  const headers = {
    'content-type': `application/ion+json; okta-version=${version}`,
    // Server wants this version info
    accept: `application/ion+json; okta-version=${version}`
  };
  const credentials = withCredentials === false ? 'omit' : 'include';
  return (0, _client.request)(target, {
    credentials,
    headers,
    body: (0, _stringify.default)(body)
  }).then(response => response.ok ? response.json() : parseAndReject(response));
};

var _default = introspect;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=introspect.js.map