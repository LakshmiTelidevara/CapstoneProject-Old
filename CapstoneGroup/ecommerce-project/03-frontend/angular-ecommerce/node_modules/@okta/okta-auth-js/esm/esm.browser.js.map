{"version":3,"file":"esm.browser.js","sources":["../../lib/errors/CustomError.ts","../../lib/errors/AuthApiError.ts","../../lib/errors/AuthPollStopError.ts","../../lib/errors/AuthSdkError.ts","../../lib/errors/OAuthError.ts","../../lib/errors/index.ts","../../lib/crypto/browser.ts","../../lib/crypto/base64.ts","../../lib/crypto/oidcHash.ts","../../lib/util/console.ts","../../lib/util/misc.ts","../../lib/util/object.ts","../../lib/util/types.ts","../../lib/util/url.ts","../../lib/crypto/verifyToken.ts","../../lib/constants.ts","../../lib/http/headers.ts","../../lib/http/request.ts","../../lib/tx/util.ts","../../lib/tx/poll.ts","../../lib/tx/AuthTransaction.ts","../../lib/tx/api.ts","../../lib/oidc/util/pkce.ts","../../lib/session.ts","../../lib/oidc/endpoints/authorize.ts","../../lib/oidc/endpoints/token.ts","../../lib/oidc/endpoints/well-known.ts","../../lib/oidc/util/browser.ts","../../lib/oidc/util/oauth.ts","../../lib/features.ts","../../lib/oidc/util/defaultTokenParams.ts","../../lib/oidc/util/errors.ts","../../lib/oidc/util/loginRedirect.ts","../../lib/oidc/util/oauthMeta.ts","../../lib/oidc/util/prepareTokenParams.ts","../../lib/oidc/util/refreshToken.ts","../../lib/oidc/util/urlParams.ts","../../lib/oidc/util/validateClaims.ts","../../lib/types/Transaction.ts","../../lib/idx/types/index.ts","../../lib/types/Token.ts","../../lib/oidc/util/validateToken.ts","../../lib/oidc/decodeToken.ts","../../lib/oidc/revokeToken.ts","../../lib/oidc/exchangeCodeForTokens.ts","../../lib/oidc/verifyToken.ts","../../lib/oidc/handleOAuthResponse.ts","../../lib/oidc/getToken.ts","../../lib/oidc/getWithoutPrompt.ts","../../lib/oidc/renewTokensWithRefresh.ts","../../lib/oidc/renewToken.ts","../../lib/oidc/renewTokens.ts","../../lib/oidc/getUserInfo.ts","../../lib/oidc/getWithPopup.ts","../../lib/oidc/getWithRedirect.ts","../../lib/oidc/parseFromUrl.ts","../../lib/crypto/webauthn.ts","../../lib/browser/browserStorage.ts","../../lib/clock.ts","../../lib/TokenManager.ts","../../lib/services/AutoRenewService.ts","../../lib/services/SyncStorageService.ts","../../lib/ServiceManager.ts","../../lib/PromiseQueue.ts","../../lib/browser/fingerprint.ts","../../lib/AuthStateManager.ts","../../lib/SavedObject.ts","../../lib/StorageManager.ts","../../lib/idx/types/idx-js.ts","../../lib/util/sharedStorage.ts","../../lib/TransactionManager.ts","../../lib/builderUtil.ts","../../lib/fetch/fetchRequest.ts","../../lib/options/browser.ts","../../lib/options/index.ts","../../lib/idx/idx-js/client.ts","../../lib/idx/idx-js/v1/actionParser.ts","../../lib/idx/idx-js/v1/generateIdxAction.ts","../../lib/idx/idx-js/v1/remediationParser.ts","../../lib/idx/idx-js/v1/idxResponseParser.ts","../../lib/idx/idx-js/v1/makeIdxState.ts","../../lib/idx/idx-js/v1/parsers.ts","../../lib/idx/idx-js/parsers.ts","../../lib/idx/idx-js/util.ts","../../lib/idx/idx-js/introspect.ts","../../lib/idx/idx-js/interact.ts","../../lib/idx/idx-js/index.ts","../../lib/idx/transactionMeta.ts","../../lib/idx/interact.ts","../../lib/idx/introspect.ts","../../lib/idx/remediators/util.ts","../../lib/idx/remediators/Base/Remediator.ts","../../lib/idx/authenticator/Authenticator.ts","../../lib/idx/authenticator/VerificationCodeAuthenticator.ts","../../lib/idx/authenticator/OktaVerifyTotp.ts","../../lib/idx/authenticator/OktaPassword.ts","../../lib/idx/authenticator/SecurityQuestionEnrollment.ts","../../lib/idx/authenticator/SecurityQuestionVerification.ts","../../lib/idx/authenticator/WebauthnEnrollment.ts","../../lib/idx/authenticator/WebauthnVerification.ts","../../lib/idx/authenticator/getAuthenticator.ts","../../lib/idx/remediators/Base/VerifyAuthenticator.ts","../../lib/idx/remediators/EnrollAuthenticator.ts","../../lib/idx/remediators/EnrollPoll.ts","../../lib/idx/remediators/SelectEnrollmentChannel.ts","../../lib/idx/remediators/EnrollmentChannelData.ts","../../lib/idx/remediators/ChallengeAuthenticator.ts","../../lib/idx/remediators/ChallengePoll.ts","../../lib/idx/remediators/ResetAuthenticator.ts","../../lib/idx/remediators/EnrollProfile.ts","../../lib/idx/remediators/Identify.ts","../../lib/idx/remediators/ReEnrollAuthenticator.ts","../../lib/idx/remediators/RedirectIdp.ts","../../lib/idx/remediators/Base/SelectAuthenticator.ts","../../lib/idx/remediators/SelectAuthenticatorAuthenticate.ts","../../lib/idx/remediators/SelectAuthenticatorEnroll.ts","../../lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts","../../lib/idx/remediators/SelectEnrollProfile.ts","../../lib/idx/remediators/Base/AuthenticatorData.ts","../../lib/idx/remediators/AuthenticatorVerificationData.ts","../../lib/idx/remediators/AuthenticatorEnrollmentData.ts","../../lib/idx/remediators/Skip.ts","../../lib/idx/remediate.ts","../../lib/idx/flow/AuthenticationFlow.ts","../../lib/idx/flow/PasswordRecoveryFlow.ts","../../lib/idx/flow/RegistrationFlow.ts","../../lib/idx/flow/AccountUnlockFlow.ts","../../lib/idx/flow/FlowSpecification.ts","../../lib/idx/run.ts","../../lib/idx/authenticate.ts","../../lib/idx/cancel.ts","../../lib/idx/emailVerify.ts","../../lib/idx/proceed.ts","../../lib/idx/poll.ts","../../lib/idx/startTransaction.ts","../../lib/idx/register.ts","../../lib/idx/recoverPassword.ts","../../lib/idx/handleInteractionCodeRedirect.ts","../../lib/idx/unlockAccount.ts","../../lib/idx/headers.ts","../../lib/OktaUserAgent.ts","../../lib/OktaAuth.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, HttpResponse } from '../types';\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: string[];\n  xhr?: HttpResponse;\n\n  constructor(err: APIError, xhr?: HttpResponse) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError } from '../types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: string[];\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n  }\n}\n\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nexport {\n  isAuthApiError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^(?:[a-z]+:)?\\/\\//i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const REDIRECT_OAUTH_PARAMS_NAME = 'okta-oauth-redirect-params';\nexport const REDIRECT_STATE_COOKIE_NAME = 'okta-oauth-state';\nexport const REDIRECT_NONCE_COOKIE_NAME = 'okta-oauth-nonce';\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthInterface } from '../types';\n\nexport function setRequestHeader(authClient: OktaAuthInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport AuthApiError from '../errors/AuthApiError';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport { OktaAuthInterface, RequestOptions, FetchOptions, RequestData } from '../types';\n\nexport function httpRequest(sdk: OktaAuthInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          res.headers = resp.headers;\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n\n      return res;\n    })\n    .catch(function(resp) {\n      var serverErr = resp.responseText || {};\n      if (isString(serverErr)) {\n        try {\n          serverErr = JSON.parse(serverErr);\n        } catch (e) {\n          serverErr = {\n            errorSummary: 'Unknown error'\n          };\n        }\n      }\n\n      if (resp.status >= 500) {\n        serverErr.errorSummary = 'Unknown error';\n      }\n\n      if (sdk.options.transformErrorXHR) {\n        resp = sdk.options.transformErrorXHR(clone(resp));\n      }\n\n      err = new AuthApiError(serverErr, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { TransactionState } from './TransactionState';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as TransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { AuthTransaction } from './AuthTransaction';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return new AuthTransaction(sdk, pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { get } from '../http';\nimport { find, omit, toQueryString, clone, isObject } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { TransactionState } from './TransactionState';\nimport { addStateToken } from './util';\nimport { getPollFn } from './poll';\nimport { postToTransaction } from './api';\nimport { IdxStatus } from '../idx/types';\n\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\ntype AuthTransactionFunction = (obj?: any) => Promise<AuthTransaction>;\n\ninterface AuthTransactionFunctions {\n  // common\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  // locked_out\n  unlock?: AuthTransactionFunction;\n  // password\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  // recovery\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  // recovery_challenge\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  // mfa_enroll_activate\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n}\n\nexport class AuthTransaction implements TransactionState, AuthTransactionFunctions {\n  next?: AuthTransactionFunction;\n  cancel?: AuthTransactionFunction;\n  skip?: AuthTransactionFunction;\n  unlock?: AuthTransactionFunction;\n  changePassword?: AuthTransactionFunction;\n  resetPassword?: AuthTransactionFunction;\n  answer?: AuthTransactionFunction;\n  recovery?: AuthTransactionFunction;\n  verify?: AuthTransactionFunction;\n  resend?: AuthTransactionFunction;\n  activate?: AuthTransactionFunction;\n  poll?: AuthTransactionFunction;\n  prev?: AuthTransactionFunction;\n\n  data?: TransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string | IdxStatus;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk, res: TransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      if (this.data.interactionHandle) {\n        this.status = res.status;\n        return;\n      }\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(new AuthTransaction(sdk));\n        };\n      }\n    }\n  }\n}\n\nfunction link2fn(sdk, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: TransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, href, data);\n        };\n    }\n  }\n}\n\nfunction links2fns(sdk, res, obj, ref) {\n  var fns = {} as AuthTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n\n// eslint-disable-next-line complexity\nfunction flattenEmbedded(sdk, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { addStateToken } from './util';\nimport { AuthTransaction } from './AuthTransaction';\n\nexport function transactionStatus(sdk, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return sdk.tx.status(args)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function introspectAuthn (sdk, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n\nexport function transactionStep(sdk, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk) {\n  // We have a cookie state token\n  return !!sdk.tx.exists._get(STATE_TOKEN_KEY_NAME);\n}\n\nexport function postToTransaction(sdk, url, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return new AuthTransaction(sdk, res);\n    });\n}\n","/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from './util';\nimport { get, post, httpRequest } from './http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(sdk, options: TokenParams, refreshToken: RefreshToken): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return name + '=' + encodeURIComponent(value!);\n    }).join('&'),\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthInterface, WellKnownResponse } from '../../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface } from '../../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, CustomUrls } from '../../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n","\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    ignoreSignature\n  });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthInterface } from '../../types';\nimport { OAuthError, AuthApiError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthInterface, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthInterface, PKCETransactionMeta, TokenParams } from '../../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthInterface, TokenParams } from '../../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\n\nexport function assertPKCESupport(sdk: OktaAuthInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}","import { RefreshToken } from '../../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthInterface, TokenVerifyParams, UserClaims } from '../../types';\n\nexport function validateClaims(sdk: OktaAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  var aud = validationParams.clientId;\n  var iss = validationParams.issuer;\n  var nonce = validationParams.nonce;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  var now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if (claims.aud !== aud) {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { StorageManager } from '../StorageManager';\nimport { CustomUrls } from './OktaAuthOptions';\nimport { FlowIdentifier, IdxTransactionMeta } from '../idx/types';\n\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\nexport interface TransactionMetaOptions {\n  pkce?: boolean;\n  oauth?: boolean;\n  muteWarning?: boolean;\n  state?: string;\n  flow?: FlowIdentifier;\n  codeVerifier?: string;\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n  activationToken?: string;\n  recoveryToken?: string;\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta {\n  issuer: string;\n  redirectUri: string;\n  state: string;\n  nonce: string;\n  responseType: string | string [];\n  responseMode?: string;\n  scopes: string[];\n  clientId: string;\n  urls: CustomUrls;\n  ignoreSignature: boolean;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends OAuthTransactionMeta {\n  codeVerifier: string;\n  codeChallengeMethod: string;\n  codeChallenge: string;\n}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { InteractOptions } from '../interact';\nimport { IntrospectOptions } from '../introspect';\nimport { APIError, Tokens } from '../../types';\nimport { PKCETransactionMeta } from '../../types/Transaction';\nimport { \n  IdxActions, \n  IdxAuthenticator, \n  IdxContext,\n  IdxForm,\n  IdxMessage, \n  IdxOption, \n  IdxRemediation, \n  IdxResponse, \n  RawIdxResponse \n} from './idx-js';\nimport { FlowIdentifier } from './FlowIdentifier';\n\nexport { IdxMessage, ChallengeData, ActivationData } from './idx-js';\nexport { AuthenticationOptions } from '../authenticate';\nexport { RegistrationOptions } from '../register';\nexport { PasswordRecoveryOptions } from '../recoverPassword';\nexport { AccountUnlockOptions } from '../unlockAccount';\nexport { ProceedOptions } from '../proceed';\nexport { CancelOptions } from '../cancel';\nexport { FlowIdentifier };\nexport { IdxAuthenticator };\nexport { EmailVerifyCallbackResponse } from '../emailVerify';\nexport { WebauthnEnrollValues } from '../authenticator/WebauthnEnrollment';\nexport { WebauthnVerificationValues } from '../authenticator/WebauthnVerification';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm};\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  options?: IdxOption[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\nexport interface IdxTransactionMeta extends PKCETransactionMeta {\n  interactionHandle?: string;\n  remediations?: string[];\n  flow?: FlowIdentifier;\n  withCredentials?: boolean;\n  activationToken?: string;\n  recoveryToken?: string;\n}\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n\n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\nexport type IdxOptions = InteractOptions & IntrospectOptions & {\n  flow?: FlowIdentifier;\n  exchangeCodeForTokens?: boolean;\n  autoRemediate?: boolean;\n};\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type Authenticator = {\n  key: string;\n  methodType?: string;\n  phoneNumber?: string;\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n","/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from '../types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from '../types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType = ['token']; // an accessToken will always be returned\n      if (scopes!.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls!)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state!;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}","/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthInterface, TokenVerifyParams } from '../types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  var jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  var validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from '../types';\nimport { exchangeCodeForTokens } from './exchangeCodeForTokens';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  var pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return exchangeCodeForTokens(sdk, Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  var responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType)) {\n    responseType = [responseType];\n  }\n\n  var scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  var clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  var tokenDict = {} as Tokens;\n  var expiresIn = res.expires_in;\n  var tokenType = res.token_type;\n  var accessToken = res.access_token;\n  var idToken = res.id_token;\n  var refreshToken = res.refresh_token;\n  var now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    var accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n  }\n\n  if (idToken) {\n    var idJwt = sdk.token.decode(idToken);\n    var idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    var validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code\n  };\n  \n}","\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from '../types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthInterface, TokenParams, RefreshToken, Tokens } from '../types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n    clientId,\n  });\n  const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n  // Support rotating refresh tokens\n  const { refreshToken } = tokens;\n  if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n    sdk.tokenManager.updateRefreshToken(refreshToken);\n  }\n\n  return tokens;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { TokenParams, Tokens } from '../types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: TokenParams): Promise<Tokens> {\n  const tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken } from '../types';\n\nexport async function getUserInfo(sdk, accessTokenObject: AccessToken, idTokenObject: IDToken): Promise<UserClaims> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams, TokenResponse } from '../types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthInterface, TokenParams } from '../types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta, { oauth: true });\n  sdk.token.getWithRedirect._setLocation(requestUrl);\n}\n","/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from '../types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    oauth: true,\n    pkce: sdk.options.pkce,\n    state\n  });\n  if (!oauthParams) {\n    return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from './base64';\nimport { ActivationData, ChallengeData, IdxAuthenticator } from '../idx/types';\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  BrowserStorageUtil,\n  CookieStorage\n} from '../types';\nimport { warn } from '../util';\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // These are shimmed in `OktaAuthBase.ts`\n  getHttpCache(): StorageProvider {\n    return null as never as StorageProvider;\n  },\n\n  getPKCEStorage(): PKCEStorage {\n    return null as never as PKCEStorage;\n  },\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = storageUtil.getLocalStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = storageUtil.getSessionStorage();\n      return storageUtil.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = storageUtil.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = storageUtil.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = storageUtil.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = storageUtil.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = storageUtil.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = storageUtil.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (storageUtil.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return storageUtil.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: storageUtil.storage.get,\n      setItem: function(key, value, expiresAt = '2200-01-01T00:00:00.000Z') {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        storageUtil.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: function(key) {\n        storageUtil.storage.delete(key);\n      }\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      }\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {},\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      }\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return storageUtil.storage.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuthInterface,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: Function, \n    idTokenCb?: Function,\n    refreshTokenCb?: Function\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n  \n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n\n  clearPendingRemoveTokens() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      if (tokens[key].pendingRemove) {\n       this.remove(key);\n      }\n    });\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { TokenManager, EVENT_EXPIRED } from '../TokenManager';\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove);\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global window */\nimport { TokenManager } from '../TokenManager';\nimport { isBrowser } from '../features';\nimport { ServiceManagerOptions, ServiceInterface } from '../types';\n\n\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManager;\n  private options: ServiceManagerOptions;\n  private syncTimeout: unknown;\n  private started = false;\n\n  constructor(tokenManager: TokenManager, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.storageListener = this.storageListener.bind(this);\n  }\n\n  // Sync authState cross multiple tabs when localStorage is used as the storageProvider\n  // A StorageEvent is sent to a window when a storage area it has access to is changed \n  // within the context of another document.\n  // https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n  private storageListener({ key, newValue, oldValue }: StorageEvent) {\n    const opts = this.tokenManager.getOptions();\n\n    const handleCrossTabsStorageChange = () => {\n      this.tokenManager.resetExpireEventTimeoutAll();\n      this.tokenManager.emitEventsForCrossTabsStorageUpdate(newValue, oldValue);\n    };\n\n    // Skip if:\n    // not from localStorage.clear (event.key is null)\n    // event.key is not the storageKey\n    // oldValue === newValue\n    if (key && (key !== opts.storageKey || newValue === oldValue)) {\n      return;\n    }\n\n    // LocalStorage cross tabs update is not synced in IE, set a 1s timer by default to read latest value\n    // https://stackoverflow.com/questions/24077117/localstorage-in-win8-1-ie11-does-not-synchronize\n    this.syncTimeout = setTimeout(() => handleCrossTabsStorageChange(), opts._storageEventDelay);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  start() {\n    if (this.canStart()) {\n      this.stop();\n      window.addEventListener('storage', this.storageListener);\n      this.started = true;\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      window.removeEventListener('storage', this.storageListener!);\n      clearTimeout(this.syncTimeout as any);\n      this.started = false;\n    }\n  }\n} ","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { AutoRenewService, SyncStorageService } from './services';\nimport { isBrowser } from './features';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started: boolean;\n\n  private static knownServices = ['autoRenew', 'syncStorage'];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage },\n      options\n    );\n\n    this.started = false;\n    this.services = new Map();\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  public static canUseLeaderElection() {\n    return isBrowser();\n  }\n\n  private onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      this.startServices();\n    }\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return this.elector?.hasLeader;\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.requiresLeadership());\n  }\n\n  start() {\n    if (this.started) {\n      this.stop();\n    }\n    // only start election if a leader is required\n    if (this.isLeaderRequired()) {\n      this.startElector();\n    }\n    this.startServices();\n    this.started = true;\n  }\n  \n  stop() {\n    this.stopElector();\n    this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private startServices() {\n    for (const srv of this.services.values()) {\n      const canStart = srv.canStart() && !srv.isStarted() && (srv.requiresLeadership() ? this.isLeader() : true);\n      if (canStart) {\n        srv.start();\n      }\n    }\n  }\n\n  private stopServices() {\n    for (const srv of this.services.values()) {\n      srv.stop();\n    }\n    this.services = new Map();\n  }\n\n  private startElector() {\n    this.stopElector();\n    if (ServiceManager.canUseLeaderElection()) {\n      if (!this.channel) {\n        const { broadcastChannelName } = this.options;\n        this.channel = new BroadcastChannel(broadcastChannelName as string);\n      }\n      if (!this.elector) {\n        this.elector = createLeaderElection(this.channel);\n        this.elector.onduplicate = this.onLeaderDuplicate;\n        this.elector.awaitLeadership().then(this.onLeader);\n      }\n    }\n  }\n\n  private stopElector() {\n    if (this.elector) {\n      this.elector?.die();\n      this.elector = undefined;\n    }\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface | undefined;\n    switch (name) {\n      case 'autoRenew':\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case 'syncStorage':\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise, warn } from './util';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\nclass PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n\n  constructor() {\n    this.queue = [];\n    this.running = false;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: () => void, thisObject: object, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        warn(\n          'Async method is being called but another async method is already running. ' +\n          'The new method will be delayed until the previous method completes.'\n        );\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n\nexport default PromiseQueue;","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions, OktaAuthInterface } from '../types';\n\nexport default function fingerprint(sdk: OktaAuthInterface, options?: FingerprintOptions): Promise<string> {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from './errors';\nimport { AuthState, AuthStateLogOptions } from './types';\nimport { OktaAuth } from '.';\nimport { getConsole } from './util';\nimport { EVENT_ADDED, EVENT_REMOVED } from './TokenManager';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\nexport class AuthStateManager {\n  _sdk: OktaAuth;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n\n  constructor(sdk: OktaAuth) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n \n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n          const promise: Promise<AuthState> = transformAuthState\n            ? transformAuthState(this._sdk, authState)\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  PKCE_STORAGE_NAME,\n  TOKEN_STORAGE_NAME,\n  TRANSACTION_STORAGE_NAME,\n  SHARED_TRANSACTION_STORAGE_NAME,\n  ORIGINAL_URI_STORAGE_NAME,\n  IDX_RESPONSE_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n  REDIRECT_OAUTH_PARAMS_NAME\n} from './constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  PKCEStorage,\n  CookieOptions,\n  TransactionStorage,\n  IdxResponseStorage,\n  StorageManagerOptions,\n  SimpleStorage\n} from './types';\nimport SavedObject from './SavedObject';\nimport { isBrowser } from './features';\nimport { warn } from './util';\nimport { AuthSdkError } from './errors';\n\nfunction logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\nexport class StorageManager {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // Maintain compatibility. Automatically fallback. May change in next major version. OKTA-362589\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // stateToken, interactionHandle\n  getTransactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getSharedTansactionStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('shared-transaction', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getOriginalUriStorage(options?: StorageOptions): TransactionStorage {\n    options = this.getOptionsForSection('original-uri', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // intermediate idxResponse\n  // store for network traffic optimazation purpose\n  // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n  getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n    let storage;\n    if (isBrowser()) {\n      // on browser side only use memory storage \n      try {\n        storage = this.storageUtil.getStorageByType('memory', options);\n      } catch (e) {\n        // it's ok to miss response storage\n        // eslint-disable-next-line max-len\n        warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n      }\n    } else {\n      // on server side re-use transaction custom storage\n      const transactionStorage = this.getTransactionStorage(options);\n      if (transactionStorage) {\n        storage = {\n          getItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (transaction && transaction[key]) {\n              return transaction[key];\n            }\n            return null;\n          },\n          setItem: (key, val) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n            }\n            transaction[key] = val;\n            transactionStorage.setStorage(transaction);\n          },\n          removeItem: (key) => {\n            const transaction = transactionStorage.getStorage();\n            if (!transaction) {\n              return;\n            }\n            delete transaction[key];\n            transactionStorage.setStorage(transaction);\n          }\n        };\n      }\n    }\n\n    if (!storage) {\n      return null;\n    }\n\n    return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // Will be removed in an upcoming major version. OKTA-362589\n  getLegacyPKCEStorage(options?: StorageOptions): PKCEStorage {\n    options = this.getOptionsForSection('legacy-pkce', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || PKCE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  getLegacyOAuthParamsStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('legacy-oauth-params', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || REDIRECT_OAUTH_PARAMS_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | { form: IdxForm };\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  refresh?: number;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\n\nexport interface IdxActions {\n  [key: string]: Function;\n}\n\n// Object returned from idx-js\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: {\n    interactionHandle?: string;\n  };\n  context?: IdxContext;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n","import { isTransactionMeta, TransactionMeta } from '../types';\nimport { StorageManager } from '../StorageManager';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage(storageManager: StorageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage(storageManager: StorageManager, state: string, meta: TransactionMeta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage(storageManager: StorageManager, state: string) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from './errors';\nimport { REDIRECT_NONCE_COOKIE_NAME, REDIRECT_OAUTH_PARAMS_NAME, REDIRECT_STATE_COOKIE_NAME } from './constants';\nimport { StorageManager } from './StorageManager';\nimport {\n  StorageProvider,\n  TransactionMeta,\n  isTransactionMeta,\n  isOAuthTransactionMeta,\n  PKCETransactionMeta,\n  OAuthTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  CookieStorage\n} from './types';\nimport { RawIdxResponse, isRawIdxResponse } from './idx/types/idx-js';\nimport { warn } from './util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\nexport interface ClearTransactionMetaOptions extends TransactionMetaOptions {\n  clearSharedStorage?: boolean;\n}\nexport default class TransactionManager {\n  options: TransactionManagerOptions;\n  storageManager: StorageManager;\n  legacyWidgetSupport: boolean;\n  saveNonceCookie: boolean;\n  saveStateCookie: boolean;\n  saveParamsCookie: boolean;\n  enableSharedStorage: boolean;\n  saveLastResponse: boolean;\n\n  constructor(options: TransactionManagerOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = options.storageManager!;\n    this.legacyWidgetSupport = options.legacyWidgetSupport === false ? false : true;\n    this.saveNonceCookie = options.saveNonceCookie === false ? false : true;\n    this.saveStateCookie = options.saveStateCookie === false ? false : true;\n    this.saveParamsCookie = options.saveParamsCookie === false ? false : true;\n    this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n    this.saveLastResponse = options.saveLastResponse === false ? false : true;\n    this.options = options;\n  }\n\n  // eslint-disable-next-line complexity\n  clear(options: ClearTransactionMetaOptions = {}) {\n    const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n    const meta = transactionStorage.getStorage();\n\n    // Clear primary storage (by default, sessionStorage on browser)\n    transactionStorage.clearStorage();\n\n    // clear IDX response storage\n    this.clearIdxResponse();\n\n    // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n    if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n      const state = options.state || meta?.state;\n      if (state) {\n        clearTransactionFromSharedStorage(this.storageManager, state);\n      }\n    }\n  \n    if (!this.legacyWidgetSupport) {\n      return;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      this.clearLegacyOAuthParams();\n    }\n\n    if (options.pkce) {\n      this.clearLegacyPKCE();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  save(meta: TransactionMeta, options: TransactionMetaOptions = {}) {\n    // There must be only one transaction executing at a time.\n    // Before saving, check to see if a transaction is already stored.\n    // An existing transaction indicates a concurrency/race/overlap condition\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    const obj = storage.getStorage();\n    // oie process may need to update transaction in the middle of process for tracking purpose\n    // false alarm might be caused \n    // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n    if (isTransactionMeta(obj) && !options.muteWarning) {\n      // eslint-disable-next-line max-len\n      warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n    }\n\n    storage.setStorage(meta);\n\n    // Shared storage allows continuation of transaction in another tab\n    if (this.enableSharedStorage && meta.state) {\n      saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n    }\n\n    if (!options.oauth) {\n      return;\n    }\n  \n    // Legacy cookie storage\n    if (this.saveNonceCookie || this.saveStateCookie || this.saveParamsCookie) {\n      const cookieStorage: CookieStorage = this.storageManager.getStorage({ storageType: 'cookie' }) as CookieStorage;\n\n      if (this.saveParamsCookie) {\n        const { \n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        } = meta;\n        const oauthParams = {\n          responseType,\n          state,\n          nonce,\n          scopes,\n          clientId,\n          urls,\n          ignoreSignature\n        };\n        cookieStorage.setItem(REDIRECT_OAUTH_PARAMS_NAME, JSON.stringify(oauthParams), null);\n      }\n\n      if (this.saveNonceCookie && meta.nonce) {\n        // Set nonce cookie for servers to validate nonce in id_token\n        cookieStorage.setItem(REDIRECT_NONCE_COOKIE_NAME, meta.nonce, null);\n      }\n\n      if (this.saveStateCookie && meta.state) {\n        // Set state cookie for servers to validate state\n        cookieStorage.setItem(REDIRECT_STATE_COOKIE_NAME, meta.state, null);\n      }\n    }\n  }\n\n  exists(options: TransactionMetaOptions = {}): boolean {\n    try {\n      const meta = this.load(options);\n      return !!meta;\n    } catch {\n      return false;\n    }\n  }\n\n  // load transaction meta from storage\n  // eslint-disable-next-line complexity,max-statements\n  load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n    let meta: TransactionMeta;\n\n    // If state was passed, try loading transaction data from shared storage\n    if (this.enableSharedStorage && options.state) {\n      pruneSharedStorage(this.storageManager); // prune before load\n      meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n      if (isTransactionMeta(meta)) {\n        return meta;\n      }\n    }\n\n    let storage: StorageProvider = this.storageManager.getTransactionStorage();\n    meta = storage.getStorage();\n    if (isTransactionMeta(meta)) {\n      // if we have meta in the new location, there is no need to go further\n      return meta;\n    }\n\n    if (!this.legacyWidgetSupport) {\n      return null;\n    }\n\n    // This is for compatibility with older versions of the signin widget. OKTA-304806\n    if (options.oauth) {\n      try {\n        const oauthParams = this.loadLegacyOAuthParams();\n        Object.assign(meta, oauthParams);\n      } finally {\n        this.clearLegacyOAuthParams();\n      }\n    }\n\n    if (options.pkce) {\n      try {\n        const pkceMeta: PKCETransactionMeta = this.loadLegacyPKCE();\n        Object.assign(meta, pkceMeta);\n      } finally {\n        this.clearLegacyPKCE();\n      }\n    }\n\n    if (isTransactionMeta(meta)) {\n      return meta;\n    }\n    return null;\n  }\n\n  // This is for compatibility with older versions of the signin widget. OKTA-304806\n  clearLegacyPKCE(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyPKCE(): PKCETransactionMeta {\n    let storage: StorageProvider;\n    let obj;\n    \n    // Try reading from localStorage first.\n    if (this.storageManager.storageUtil.testStorageType('localStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'localStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n\n    // If meta is not valid, read from sessionStorage. This is expected for more recent versions of the widget.\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyPKCEStorage({ storageType: 'sessionStorage' });\n      obj = storage.getStorage();\n      if (obj && obj.codeVerifier) {\n        return obj;\n      }\n    }\n    \n    // If meta is not valid, throw an exception to avoid misleading server-side error\n    // The most likely cause of this error is trying to handle a callback twice\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n  }\n\n  clearLegacyOAuthParams(): void {\n    // clear storages\n    let storage: StorageProvider;\n\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      storage.clearStorage();\n    }\n\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      storage.clearStorage();\n    }\n  }\n\n  loadLegacyOAuthParams(): OAuthTransactionMeta {\n    let storage: StorageProvider;\n    let oauthParams;\n  \n    // load first from session storage\n    if (this.storageManager.storageUtil.testStorageType('sessionStorage')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'sessionStorage' });\n      oauthParams = storage.getStorage();\n    }\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n    // try to load from cookie\n    if (this.storageManager.storageUtil.testStorageType('cookie')) {\n      storage = this.storageManager.getLegacyOAuthParamsStorage({ storageType: 'cookie' });\n      oauthParams = storage.getStorage();\n    }\n\n    if (isOAuthTransactionMeta(oauthParams)) {\n      return oauthParams;\n    }\n\n\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n\n    // Something is there but we don't recognize it\n    // throw new AuthSdkError('Unable to parse the ' + REDIRECT_OAUTH_PARAMS_NAME + ' value from storage');\n  }\n\n  saveIdxResponse(idxResponse: RawIdxResponse): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return;\n    }\n    storage.setStorage(idxResponse);\n  }\n\n  loadIdxResponse(): RawIdxResponse | null {\n    if (!this.saveLastResponse) {\n      return null;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    if (!storage) {\n      return null;\n    }\n    const idxResponse = storage.getStorage();\n    if (!isRawIdxResponse(idxResponse)) {\n      return null;\n    }\n    return idxResponse;\n  }\n\n  clearIdxResponse(): void {\n    if (!this.saveLastResponse) {\n      return;\n    }\n    const storage = this.storageManager.getIdxResponseStorage();\n    storage?.clearStorage();\n  }\n}","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { OktaAuthOptions } from './types';\n\n// TODO: use @okta/configuration-validation (move module to this monorepo?)\n// eslint-disable-next-line complexity\nfunction assertValidConfig(args: OktaAuthOptions) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport {\n  assertValidConfig\n};\n","/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../types';\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  // JSON encode body (if appropriate)\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, OktaAuthOptions } from '../types';\nimport { warn } from '../util';\n\nexport { default as storage } from '../browser/browserStorage';\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport const enableSharedStorage = true;\n\nexport function getCookieSettings(args: OktaAuthOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeTrailingSlash, removeNils } from '../util';\nimport { assertValidConfig } from '../builderUtil';\nimport { OktaAuthOptions } from '../types';\n\nimport fetchRequest from '../fetch/fetchRequest';\nimport { storage, STORAGE_MANAGER_OPTIONS, enableSharedStorage, getCookieSettings } from './node';\nimport { isHTTPS } from '../features';\n\nexport function getDefaultOptions(): OktaAuthOptions {\n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: storage,\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret\n  });\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// @ts-nocheck\nimport fetch from 'cross-fetch';\n\n/**\n * Reusable interceptor interface\n */\nexport class Interceptor {\n  handlers = [];\n\n  // Adds a new interceptor to our HttpClient\n  use(before) {\n    this.handlers.push({\n      before,\n    });\n  }\n\n  // Clears all interceptors\n  clear() {\n    this.handlers = [];\n  }\n}\n\n/**\n * Singleton instance of the IdX HTTP Client\n *\n * Invoke the `use` method to add a new interceptor:\n *   - client.interceptors.request.use((requestConfig) => { some logic });\n */\nexport const HttpClient = {\n  interceptors: {\n    request: new Interceptor(),\n  },\n};\n\nexport const request = async (\n  target, \n  { \n    method = 'POST', \n    headers = {}, \n    credentials = 'include', \n    body \n  }\n) => {\n  const requestOptions = {\n    url: target,\n    method,\n    headers: {\n      ...headers,\n    },\n    credentials,\n    body,\n  };\n\n  if (HttpClient.interceptors) {\n    HttpClient.interceptors.request.handlers.forEach( interceptor => {\n      interceptor.before(requestOptions);\n    });\n  }\n\n  // Extract the URL to adhere to the fetch API\n  const { url } = requestOptions;\n  delete requestOptions.url;\n\n  return fetch( url, requestOptions );\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n// @ts-nocheck\nimport { request } from '../client';\nimport { divideActionParamsByMutability } from './actionParser';\nimport { makeIdxState } from './makeIdxState';\n\nconst generateDirectFetch = function generateDirectFetch({ \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist \n}) {\n  const target = actionDefinition.href;\n  return async function(params) {\n    const headers = {\n      'content-type': 'application/json',\n      'accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n    const credentials = toPersist && toPersist.withCredentials === false ? 'omit' : 'include';\n    return request(target, { method: actionDefinition.method, headers, body, credentials })\n      .then( response => {\n        const respJson = response.json();\n        if (response.ok) {\n          return respJson;\n        } else if (response.status === 401 && response.headers.get('WWW-Authenticate') === 'Oktadevicejwt realm=\"Okta Device\"') {\n          // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n          // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n          // the response reaches here when Okta Verify is not installed\n          // we need to return an idx object so that\n          // the SIW can proceed to the next step without showing error\n          return respJson.then(err => {\n            let ms = makeIdxState(err, toPersist);\n            // set to true if flow should be continued without showing any errors\n            ms.stepUp = true;\n            return Promise.reject(ms);\n          });\n        }\n        return respJson.then(err => {\n          return Promise.reject(makeIdxState(err, toPersist));\n        });\n      })\n      .then( idxResponse => makeIdxState(idxResponse, toPersist) );\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( actionDefinition, toPersist ) {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator( {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// @ts-nocheck\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions( remediationValue, toPersist = {} ) {\n\n  return Object.fromEntries( remediationValue.map( remediation => {\n    return [\n      remediation.name,\n      generateIdxAction(remediation, toPersist),\n    ];\n  }) );\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n// @ts-nocheck\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { JSONPath } from 'jsonpath-plus';\n\nconst SKIP_FIELDS = Object.fromEntries([\n  'remediation', // remediations are put into proceed/neededToProceed\n  'context', // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n].map( (field) => [ field, !!'skip this field' ] ));\n\nexport const parseNonRemediations = function parseNonRemediations( idxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {};\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        // eslint-disable-next-line new-cap\n        const result = JSONPath({ path: query, json: idxResponse })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (remediation, toPersist) => {\n  const remediationActions = generateRemediationFunctions( [remediation], toPersist );\n  const actionFn = remediationActions[remediation.name];\n  return {\n    ...remediation,\n    action: actionFn,\n  };\n};\n\nexport const parseIdxResponse = function parseIdxResponse( idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => expandRelatesTo(idxResponse, remediation)\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse } from '../../types/idx-js';\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( idxResponse, toPersist ): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action(paramsFromUser);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value.find( findCode ).value;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n  };\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// @ts-nocheck\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n// We load all the current parsers, because we won't know in advance which version(s) we need to parse\n// Expect to only support current major - 1 (also suspect that this limit may never be hit)\n\n// @ts-nocheck\nimport v1 from './v1/parsers'; // More granularity to be defined as needed\n\nconst parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport default parsersForVersion;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// @ts-nocheck\nimport parsersForVersion from './parsers';\n\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { request } from './client';\nimport { validateVersionConfig } from './util';\n\nexport interface IntrospectOptions {\n  domain: string;\n  withCredentials?: boolean;\n  interactionHandle?: string;\n  stateHandle?: string;\n  version?: string;\n}\n\nconst parseAndReject = response => response.json().then( err => Promise.reject(err) );\n\nconst introspect = async function introspect({\n  withCredentials,\n  domain,\n  interactionHandle,\n  stateHandle,\n  version,\n}: IntrospectOptions) {\n  validateVersionConfig(version);\n  const target = `${domain}/idp/idx/introspect`;\n  const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n  const headers = {\n    'content-type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n    accept: `application/ion+json; okta-version=${version}`,\n  };\n  const credentials = withCredentials === false ? 'omit' : 'include';\n  return request(target, { credentials, headers, body: JSON.stringify(body) })\n    .then( response => response.ok ? response.json() : parseAndReject( response ) );\n};\n\nexport default introspect;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable camelcase */\n// @ts-nocheck\nimport { request } from './client';\n\nconst parseAndReject = response => response.json().then( err => Promise.reject(err) );\n\nconst interact = async function interact({\n  withCredentials,\n  clientId,\n  baseUrl,\n  scopes = ['openid', 'email'],\n  redirectUri,\n  codeChallenge,\n  codeChallengeMethod,\n  state,\n  activationToken,\n  recoveryToken,\n  clientSecret,\n}) {\n\n  const target = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n  };\n  if (activationToken) {\n    params.activation_token = activationToken;\n  }\n  if (recoveryToken) {\n    params.recovery_token = recoveryToken;\n  }\n  if (clientSecret) {\n    params.client_secret = clientSecret;\n  }\n  const body = Object.entries(params)\n    .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n    .join('&');\n  const headers = {\n    'content-type': 'application/x-www-form-urlencoded',\n  };\n  const credentials = withCredentials === false ? 'omit' : 'include';\n  return request(target, { credentials, headers, body })\n    .then( response => response.ok ? response.json() : parseAndReject( response ) )\n    .then( data => data.interaction_handle);\n};\n\nexport default interact;\n","/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity, max-statements, max-len, camelcase */\n// @ts-nocheck\nimport introspect from './introspect';\nimport interact from './interact';\nimport parsersForVersion from './parsers';\nimport { HttpClient } from './client';\nimport { validateVersionConfig } from './util';\n\nconst LATEST_SUPPORTED_IDX_API_VERSION = '1.0.0';\n\nconst start = async function start({\n  withCredentials,\n  clientId,\n  domain,\n  issuer,\n  stateHandle,\n  interactionHandle,\n  version,\n  redirectUri,\n  state,\n  scopes,\n  codeChallenge,\n  codeChallengeMethod,\n  activationToken,\n  recoveryToken\n}) {\n\n  issuer = issuer?.replace(/\\/+$/, '');\n  const baseUrl = issuer?.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2'; // org AS uses domain as AS, but we need the base url for calls\n  const toPersist = {\n    baseUrl,\n    clientId,\n    state,\n    withCredentials\n  };\n\n  if ( !domain && !issuer) {\n    return Promise.reject({ error: 'issuer is required' });\n  }\n\n  if ( !stateHandle && !clientId ) { // redirectUri is only required on self-hosted flow\n    return Promise.reject({ error: 'clientId is required' });\n  }\n\n  if ( !stateHandle && !redirectUri ) { // redirectUri is only required on self-hosted flow\n    return Promise.reject({ error: 'redirectUri is required' });\n  }\n\n  if (!stateHandle && !(codeChallenge && codeChallengeMethod)) {\n    return Promise.reject({ error: 'PKCE params (codeChallenge, codeChallengeMethod) are required' });\n  }\n\n  if ( !domain ) {\n    domain = new URL(issuer).origin;\n  }\n\n  validateVersionConfig(version);\n\n  if ( !stateHandle && !interactionHandle ) { // start a new transaction\n    try {\n      const interactParams = {\n        withCredentials,\n        clientId,\n        baseUrl,\n        scopes,\n        redirectUri,\n        codeChallenge,\n        codeChallengeMethod,\n        state,\n        activationToken,\n        recoveryToken\n      };\n\n      const interaction_handle = await interact( interactParams );\n      interactionHandle = interaction_handle;\n      toPersist.interactionHandle = interactionHandle;\n    } catch (error) {\n      return Promise.reject({ error });\n    }\n  }\n\n  try {\n    const { makeIdxState } = parsersForVersion(version);\n    const idxResponse = await introspect({ withCredentials, domain, interactionHandle, stateHandle, version })\n      .catch( err => Promise.reject({\n        error: 'introspect call failed',\n        // Transform all errors into an IdX State object.\n        // This allows IdX based errors (messages) to optionally proceed with remediation forms\n        details: makeIdxState( err, toPersist )\n      }) );\n    const idxState = makeIdxState( idxResponse, toPersist );\n    return idxState;\n  } catch (error) {\n    return Promise.reject({ error });\n  }\n};\nconst { makeIdxState } = parsersForVersion(LATEST_SUPPORTED_IDX_API_VERSION);\n\nexport default {\n  start,\n  introspect,\n  interact,\n  makeIdxState,\n  client: HttpClient,\n  LATEST_SUPPORTED_IDX_API_VERSION,\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, IdxTransactionMeta, TransactionMetaOptions, PKCETransactionMeta } from '../types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthInterface,\n  options: TransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(authClient: OktaAuthInterface, options?: TransactionMetaOptions): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthInterface,\n  options?: TransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: TransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport idx from './idx-js';\nimport { OktaAuthInterface, IdxTransactionMeta } from '../types';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { createTransactionMeta } from '.';\nimport { removeNils } from '../util';\n\nexport interface InteractOptions {\n  withCredentials?: boolean;\n  state?: string;\n  scopes?: string[];\n  codeChallenge?: string;\n  codeChallengeMethod?: string;\n  activationToken?: string;\n  recoveryToken?: string;\n  clientSecret?: string;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n\n  const interactionHandle = await idx.interact({\n    withCredentials,\n\n    // OAuth\n    clientId, \n    baseUrl,\n    scopes,\n    state,\n    redirectUri,\n\n    // PKCE\n    codeChallenge,\n    codeChallengeMethod,\n\n    // Activation\n    activationToken,\n    \n    // Recovery\n    recoveryToken,\n\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    clientSecret\n  });\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport idx from './idx-js';\nimport { OktaAuthInterface } from '../types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\n\nexport interface IntrospectOptions {\n  withCredentials?: boolean;\n  interactionHandle?: string;\n  stateHandle?: string;\n  version?: string;\n}\n\nexport async function introspect (\n  authClient: OktaAuthInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  // try load from storage first\n  let rawIdxResponse = authClient.transactionManager.loadIdxResponse();\n  \n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    try {\n      rawIdxResponse = await idx.introspect({ domain, ...options, version });\n    } catch (err) {\n      if (isRawIdxResponse(err)) {\n        rawIdxResponse = err;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return idx.makeIdxState(rawIdxResponse, { withCredentials });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { NextStep, IdxMessage, Authenticator, Input, IdxOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase } from '../util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues extends IdxOptions {\n  stateHandle?: string;\n  authenticators?: Authenticator[] | string[];\n  authenticator?: string;\n  authenticatorsData?: Authenticator[];\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: RemediationValues;\n  map?: IdxToRemediationValueMap;\n\n  constructor(remediation: IdxRemediation, values: RemediationValues = {}) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n    // add string authenticator from input to \"authenticators\" field\n    if (this.values.authenticator) {\n      const hasAuthenticatorInList = this.values.authenticators.some(authenticator => {\n        if (typeof authenticator === 'string') {\n          return authenticator === this.values.authenticator;\n        }\n        return authenticator.key === this.values.authenticator;\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push({\n          key: this.values.authenticator \n        });\n      }\n    }\n\n    // transform items in \"authenticators\" into one format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return typeof authenticator === 'string' ? { key: authenticator } : authenticator;\n    });\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(): boolean {\n    if (!this.map) {\n      return false;\n    }\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      return this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n    }\n\n    if (!this.map) {\n      return this.values[key];\n    }\n\n    // Handle general primitive types\n    const entry = this.map[key];\n    if (!entry) {\n      return this.values[key];\n    }\n\n    // find the first aliased property that returns a truthy value\n    for (let i = 0; i < entry.length; i++) {\n      let val = this.values[entry[i]];\n      if (val) {\n        return val;\n      }\n    }\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n\n    // First see if the remediation has a mapping for this value\n    const data = this.getData(key);\n    if (typeof data === 'object') {\n      return !!Object.keys(data).find(key => !!data[key]);\n    }\n    return !!data;\n  }\n\n  getNextStep(_context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  private getInputs(): Input[] {\n    if (!this.map) {\n      return [];\n    }\n\n    return Object.keys(this.map).reduce((inputs, key) => {\n      const inputFromRemediation = this.remediation.value!.find(item => item.name === key);\n      if (!inputFromRemediation) {\n        return inputs;\n      }\n\n      let input;\n      const aliases = this.map![key];\n      const { type } = inputFromRemediation;\n      if (typeof this[`getInput${titleCase(key)}`] === 'function') {\n        input = this[`getInput${titleCase(key)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let name;\n        if (aliases.length === 1) {\n          name = aliases[0];\n        } else {\n          // try find key from values\n          name = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (name) {\n          input = { ...inputFromRemediation, name };\n        }\n      } \n\n      if (!input) {\n        throw new AuthSdkError(`Missing custom getInput${titleCase(key)} method in Remediator: ${this.getName()}`);\n      }\n\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i as never));\n      } else {\n        inputs.push(input as never);\n      }\n      return inputs;\n    }, []);\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages, field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value] as never;\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): RemediationValues {\n    const inputs = this.getInputs();\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    return this.remediation.relatesTo?.value;\n  }\n}\n","import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials {\n    return { passcode: values.verificationCode || values.otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials {\n    return { totp: values.verificationCode };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!values.password;\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials {\n    return { passcode: values.password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials {\n    const { questionKey, question, answer } = values;\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', require: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    return !!values.answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials {\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer: values.answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { clientData, attestation } = values;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials {\n    const { clientData, attestation } = values;\n    return {\n      clientData,\n      attestation\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n","import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { clientData, authenticatorData, signatureData } = values;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials {\n    const { authenticatorData, clientData, signatureData } = values;\n    return {\n      authenticatorData,\n      clientData,\n      signatureData\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n","import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator extends Remediator {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n  values!: VerifyAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  constructor(remediation: IdxRemediation, values: VerifyAuthenticatorValues = {}) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'enroll-authenticator';\n  values!: EnrollAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep } from '../../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator {\n  static remediationName = 'enroll-poll';\n\n  values!: EnrollPollValues;\n\n  canRemediate() {\n    return Boolean(this.values.startPolling);\n  }\n\n  getNextStep(context?: IdxContext): NextStep {\n    const common = super.getNextStep(context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxOption, IdxRemediationValue, IdxContext } from '../types/idx-js';\nimport { getAuthenticatorFromRemediation } from './util';\n\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator {\n  static remediationName = 'select-enrollment-channel';\n\n  values!: SelectEnrollmentChannelValues;\n\n  canRemediate() {\n    return Boolean(this.values.channel);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const options = this.getChannels();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      ...(options && { options }),\n      authenticator,\n    };\n  }\n\n  private getChannels(): IdxOption[] | undefined {\n    const authenticator: IdxRemediationValue = getAuthenticatorFromRemediation(this.remediation);\n    const remediationValue = authenticator.value as IdxRemediationValueForm;\n    return remediationValue.form.value.find(({ name }) => name === 'channel')?.options;\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'channel');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator {\n  static remediationName = 'enrollment-channel-data';\n\n  values!: EnrollmentChannelDataValues;\n\n  map = {\n    email: [],\n    phoneNumber: []\n  }\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(context: IdxContext) {\n    const common = super.getNextStep();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed() {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'challenge-authenticator';\n  values!: ChallengeAuthenticatorValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator {\n  static remediationName = 'reset-authenticator';\n  values!: ResetAuthenticatorValues;\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator {\n  static remediationName = 'enroll-profile';\n\n  values!: EnrollProfileValues;\n\n  map = {\n    'userProfile': []\n  };\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    return attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n}\n\nexport class Identify extends Remediator {\n  static remediationName = 'identify';\n\n  values!: IdentifyValues;\n\n  map = {\n    'identifier': ['username'],\n    'credentials': [],\n    'rememberMe': ['rememberMe'],\n  };\n\n  canRemediate() {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    return { passcode: this.values.password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator {\n  static remediationName = 'reenroll-authenticator';\n\n  values!: ReEnrollAuthenticatorValues;\n\n  map = {\n    'credentials': []\n  };\n\n  mapCredentials() {\n    return { \n      passcode: this.values.newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxAuthenticator, IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator } from '../../types';\n\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator extends Remediator {\n  values!: SelectAuthenticatorValues;\n  selectedAuthenticator?: IdxAuthenticator;\n  selectedOption?: any;\n  \n  map = {\n    authenticator: []\n  }\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators } = this.values;\n    const { options } = remediationValue;\n    const selectedOption = this.findMatchedOption(authenticators, options);\n    // track the selected authenticator\n    this.selectedAuthenticator = selectedOption.relatesTo;\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator() {\n    return { name: 'authenticator', key: 'string' };\n  }\n\n  getValuesAfterProceed(): RemediationValues {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return authenticator.key !== this.selectedAuthenticator!.key; \n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-authenticate';\n  values!: SelectAuthenticatorAuthenticateValues;\n\n  constructor(remediation: IdxRemediation, values: SelectAuthenticatorValues = {}) {\n    super(remediation, values);\n\n    // Preset password authenticator to trigger recover action\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (this.values.flow === 'recoverPassword' || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-enroll';\n  values!: SelectAuthenticatorEnrollValues;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n  static remediationName = 'select-authenticator-unlock-account';\n  values!: SelectAuthenticatorUnlockAccountValues;\n  authenticator?: Authenticator;\n\n  map = {\n    authenticator: [],\n    identifier: ['username']\n  }\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', key: 'string' };\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator {\n  static remediationName = 'select-enroll-profile';\n\n  values!: SelectEnrollProfileValues;\n\n  canRemediate() {\n    return true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxOption, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData extends Remediator {\n\n  map = {\n    'authenticator': []\n  };\n\n  values!: AuthenticatorDataValues;\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (data.key === this.authenticator.key) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find(({ key }) => key === this.authenticator.key);\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => data.key === this.authenticator.key);\n  }\n\n  getNextStep() {\n    const common = super.getNextStep();\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    const { methodType } = this.values;\n    const data = { \n      key: this.authenticator.key, \n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form!.value.find(({ name }) => name === 'methodType')?.options as IdxOption[];\n  }\n\n  getValuesAfterProceed(): RemediationValues {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => data.key !== this.authenticator.key);\n    return { ...this.values, authenticatorsData };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { IdxRemediation } from '../types/idx-js';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData {\n  static remediationName = 'authenticator-verification-data';\n\n  values!: AuthenticatorVerificationDataValues;\n  shouldProceedWithEmailAuthenticator: boolean;\n\n  constructor(remediation: IdxRemediation, values: AuthenticatorDataValues = {}) {\n    super(remediation, values);\n\n    // TODO: extend this feature to all authenticators\n    this.shouldProceedWithEmailAuthenticator = this.authenticator.methods.length === 1 \n      && this.authenticator.methods[0].type === 'email';\n  }\n\n  canRemediate() {\n    // auto proceed if there is only one method\n    if (this.shouldProceedWithEmailAuthenticator) {\n      return true;\n    }\n    return super.canRemediate();\n  }\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = this.getAuthenticatorFromRemediation();\n\n    // auto proceed with the only methodType option\n    if (this.shouldProceedWithEmailAuthenticator) {\n      return authenticatorFromRemediation.form?.value.reduce((acc, curr) => {\n        if (curr.value) {\n          acc[curr.name] = curr.value;\n        } else if (curr.options) {\n          acc[curr.name] = curr.options![0].value;\n        } else {\n          throw new AuthSdkError(`Unsupported authenticator data type: ${curr}`);\n        }\n        return acc;\n      }, {});\n    }\n\n    // return based on user selection\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      enrollmentId: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'enrollmentId')?.value,\n      methodType: authenticatorData?.methodType,\n    };\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { name: 'methodType', type: 'string', required: true };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData {\n  static remediationName = 'authenticator-enrollment-data';\n\n  values!: AuthenticatorEnrollmentDataValues;\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator() {\n    return [\n      { name: 'methodType', type: 'string', required: true },\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    data = { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n\n    return (data.phoneNumber && data.methodType) ? data : null;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator {\n  static remediationName = 'skip';\n\n  values!: SkipValues;\n\n  map = {\n    skip: ['skip']\n  }\n\n  canRemediate() {\n    return !!this.values.skip;\n  }\n\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { Remediator, RemediationValues } from './remediators';\nimport { NextStep, IdxMessage, FlowIdentifier } from './types';\nimport { RemediationFlow } from './flow';\nimport { \n  IdxResponse,  \n  IdxRemediation,\n  isIdxResponse, \n} from './types/idx-js';\n\ninterface RemediationResponse {\n  idxResponse?: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\nexport interface RemediateOptions {\n  remediators?: RemediationFlow;\n  actions?: string[];\n  flow?: FlowIdentifier;\n  step?: string;\n}\n\n// Return first match idxRemediation in allowed remediators\nexport function getRemediator(\n  idxRemediations: IdxRemediation[],\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n\n  let remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    const T = remediators[remediation.name];\n    return new T(remediation, values);\n  }\n\n  const remediatorCandidates = [];\n  for (let remediation of idxRemediations) {\n    const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n    if (!isRemeditionInFlow) {\n      continue;\n    }\n\n    const T = remediators[remediation.name];\n    remediator = new T(remediation, values);\n    if (remediator.canRemediate()) {\n      // found the remediator\n      return remediator;\n    }\n    // remediator cannot handle the current values\n    // maybe return for next step\n    remediatorCandidates.push(remediator as never);  \n  }\n  \n  return remediatorCandidates[0];\n}\n\nfunction isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nfunction canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nfunction canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nfunction getIdxMessages(idxResponse: IdxResponse): IdxMessage[] {\n  let messages = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  for (let remediation of neededToProceed) {\n    const fieldMessages = Remediator.getMessages(remediation);\n    if (fieldMessages) {\n      messages = [...messages, ...fieldMessages] as never;\n    }\n  }\n\n  return messages;\n}\n\nfunction getNextStep(\n  remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nfunction handleIdxError(e, remediator?) {\n  // Handle idx messages\n  const idxState = isIdxResponse(e) ? e : null;\n  if (!idxState) {\n    // Thrown error terminates the interaction with idx\n    throw e;\n  }\n  const terminal = isTerminalResponse(idxState);\n  const messages = getIdxMessages(idxState);\n  if (terminal) {\n    return { terminal, messages };\n  } else {\n    const nextStep = remediator && getNextStep(remediator, idxState);\n    return { \n      messages, \n      ...(nextStep && { nextStep }) \n    };\n  }\n}\n\nfunction getActionFromValues(values, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values) {\n  // Currently support resend actions only\n  values.resend = undefined;\n  return values;\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { remediators, flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  // Reach to terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getIdxMessages(idxResponse);\n  if (terminal) {\n    return { terminal, messages };\n  }\n  \n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actions = [\n    ...options.actions || [],\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      if (typeof idxResponse.actions[action] === 'function') {\n        try {\n          idxResponse = await idxResponse.actions[action]();\n        } catch (e) {\n          return handleIdxError(e, remediators);\n        }\n        if (action === 'cancel') {\n          return { canceled: true };\n        }\n        return remediate(idxResponse, valuesWithoutExecutedAction, options); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        try {\n          idxResponse = await idxResponse.proceed(action, {});\n        }\n        catch (e) {\n          return handleIdxError(e, remediators);\n        }\n\n        return remediate(idxResponse, values, options); // recursive call\n      }\n    }\n  }\n\n  const remediator = getRemediator(neededToProceed, values, options);\n  if (!remediator && flow === 'default') {\n    return { idxResponse };\n  }\n\n  if (!remediator) {\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  if (messages.length) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return { nextStep, messages };\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(remediator, idxResponse);\n    return { idxResponse, nextStep };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n  try {\n    idxResponse = await idxResponse.proceed(name, data);\n\n    // We may want to trim the values bag for the next remediation\n    // Let the remediator decide what the values should be (default to current values)\n    values = remediator.getValuesAfterProceed();\n    return remediate(idxResponse, values, options); // recursive call\n  } catch (e) {\n    return handleIdxError(e, remediator);\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll, Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'enroll-poll': EnrollPoll,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n};\n","import { OktaAuthInterface, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(oktaAuth: OktaAuthInterface, flow: FlowIdentifier = 'default'): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate, RemediateOptions } from './remediate';\nimport { getFlowSpecification, RemediationFlow } from './flow';\nimport * as remediators from './remediators';\nimport { \n  OktaAuthInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  FlowIdentifier,\n} from '../types';\nimport { IdxResponse, isIdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport { ProceedOptions } from './proceed';\n\nexport type RunOptions = ProceedOptions & RemediateOptions & {\n  flow?: FlowIdentifier;\n  remediators?: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\nfunction getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nfunction getAvailableSteps(idxResponse: IdxResponse): NextStep[] {\n  const res = [];\n\n  const remediatorMap = Object.values(remediators).reduce((map, remediatorClass) => {\n    // Only add concrete subclasses to the map\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n    return map;\n  }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = remediatorMap[remediation.name];\n    if (T) {\n      const remediator = new T(remediation);\n      res.push (remediator.getNextStep(idxResponse.context) as never);\n    }\n  }\n\n  return res;\n}\n\nexport async function run(\n  authClient: OktaAuthInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let tokens;\n  let nextStep;\n  let messages;\n  let error;\n  let meta;\n  let enabledFeatures;\n  let availableSteps;\n  let status = IdxStatus.PENDING;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let idxResponse;\n  let interactionHandle;\n  let metaFromResp;\n  let interactionCode;\n\n  try {\n\n    let {\n      flow,\n      state,\n      scopes,\n      version,\n      remediators,\n      actions,\n      withCredentials,\n      exchangeCodeForTokens,\n      autoRemediate,\n      step,\n      recoveryToken,\n      activationToken\n    } = options;\n\n    // Only one flow can be operating at a time\n    flow = flow || authClient.idx.getFlow() || 'default';\n    if (flow) {\n      authClient.idx.setFlow(flow);\n      const flowSpec = getFlowSpecification(authClient, flow);\n      // Favor option values over flow spec\n      withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n      remediators = remediators || flowSpec.remediators;\n      actions = actions || flowSpec.actions;\n    }\n\n    // Try to resume saved transaction\n    metaFromResp = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken });\n    interactionHandle = metaFromResp?.interactionHandle; // may be undefined\n\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      metaFromResp = interactResponse.meta;\n      withCredentials = metaFromResp.withCredentials;\n    }\n\n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle });\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(idxResponse);\n    \n    // Include meta in the transaction response\n    meta = metaFromResp;\n\n    if (autoRemediate !== false && (remediators || actions)) {\n      const values: remediators.RemediationValues = { \n        ...options, \n        stateHandle: idxResponse.rawIdxState.stateHandle \n      };\n\n      // Can we handle the remediations?\n      const { \n        idxResponse: idxResponseFromResp, \n        nextStep: nextStepFromResp,\n        terminal,\n        canceled,\n        messages: messagesFromResp,\n      } = await remediate(idxResponse, values, { remediators, actions, flow, step });\n      idxResponse = idxResponseFromResp || idxResponse;\n\n      // Track fields from remediation response\n      nextStep = nextStepFromResp;\n      messages = messagesFromResp;\n\n      // Save intermediate idx response in storage to reduce introspect call\n      if (nextStep) {\n        authClient.transactionManager.saveIdxResponse(idxResponse.rawIdxState);\n        availableSteps = getAvailableSteps(idxResponse);\n      }\n\n      if (terminal) {\n        status = IdxStatus.TERMINAL;\n        shouldClearTransaction = true;\n        clearSharedStorage = false; // transaction may be continued in another tab\n      } if (canceled) {\n        status = IdxStatus.CANCELED;\n        shouldClearTransaction = true;\n      } else if (idxResponse?.interactionCode) { \n        interactionCode = idxResponse.interactionCode;\n\n        if (exchangeCodeForTokens === false) {\n          status = IdxStatus.SUCCESS;\n          shouldClearTransaction = false;\n        } else {\n          // exchange the interaction code for tokens\n          const {\n            clientId,\n            codeVerifier,\n            ignoreSignature,\n            redirectUri,\n            urls,\n            scopes,\n          } = metaFromResp;\n          tokens = await authClient.token.exchangeCodeForTokens({\n            interactionCode,\n            clientId,\n            codeVerifier,\n            ignoreSignature,\n            redirectUri,\n            scopes\n          }, urls);\n\n          status = IdxStatus.SUCCESS;\n          shouldClearTransaction = true;\n        }\n      }\n    }\n  } catch (err) {\n    // current version of idx-js will throw/reject IDX responses. Handle these differently than regular errors\n    if (isIdxResponse(err)) {\n      error = err;\n      status = IdxStatus.FAILURE;\n      shouldClearTransaction = true;\n    } else {\n      // error is not an IDX response, throw it like a regular error\n      throw err;\n    }\n\n  }\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else if (meta?.state) {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n  }\n  \n  // from idx-js, used by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState } = idxResponse || {};\n  return {\n    status,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens: tokens.tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && { messages }),\n    ...(error && { error }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions,\n    context,\n    neededToProceed,\n    proceed,\n    rawIdxState,\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxOptions,\n  IdxTransaction,\n  AuthenticatorKey\n} from '../types';\nimport { run } from './run';\nimport { \n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n} from './remediators';\n\nexport type AuthenticationOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & SelectAuthenticatorEnrollValues\n  & ChallengeAuthenticatorValues \n  & ReEnrollAuthenticatorValues\n  & AuthenticatorEnrollmentDataValues\n  & EnrollAuthenticatorValues;\n\nexport async function authenticate(\n  authClient: OktaAuthInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n","/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface, IdxOptions, IdxTransactionMeta } from '../types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport type CancelOptions = IdxOptions;\n\nexport async function cancel (authClient: OktaAuthInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n","\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthInterface } from '../types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthInterface,\n  IdxTransaction,\n} from '../types';\nimport { run } from './run';\nimport { AuthenticationOptions } from './authenticate';\nimport {\n  EnrollPollValues as EnrollPollOptions,\n  SelectEnrollmentChannelValues as SelectEnrollmentChannelOptions\n} from './remediators';\nimport { RegistrationOptions } from './register';\nimport { PasswordRecoveryOptions } from './recoverPassword';\nimport { AccountUnlockOptions } from './unlockAccount';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport type ProceedOptions = AuthenticationOptions\n  & RegistrationOptions\n  & PasswordRecoveryOptions\n  & AccountUnlockOptions\n  & EnrollPollOptions\n  & SelectEnrollmentChannelOptions\n  & { step?: string };\n\nexport function canProceed(authClient: OktaAuthInterface, options?: { state?: string }) {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!meta;\n}\n\nexport async function proceed(\n  authClient: OktaAuthInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n  const { state } = options;\n  const meta = getSavedTransactionMeta(authClient, { state });\n\n  // Proceed always needs saved transaction meta\n  if (!meta) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  // Determine the flow specification based on the saved flow\n  const flow = meta?.flow;\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n","/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthInterface,\n} from '../types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run, RunOptions } from './run';\nimport { OktaAuthInterface, IdxTransaction } from '../types';\n\nexport async function startTransaction(\n  authClient: OktaAuthInterface, \n  options: RunOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { \n  EnrollProfileValues,\n  SelectAuthenticatorEnrollValues,\n  EnrollAuthenticatorValues,\n  AuthenticatorEnrollmentDataValues,\n  SkipValues,\n} from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  IdxOptions, \n  IdxTransaction, \n  OktaAuthInterface, \n  IdxFeature,\n} from '../types';\n\nexport type RegistrationOptions = IdxOptions \n  & EnrollProfileValues \n  & SelectAuthenticatorEnrollValues \n  & EnrollAuthenticatorValues \n  & AuthenticatorEnrollmentDataValues \n  & SkipValues;\n\nexport async function register(\n  authClient: OktaAuthInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures, availableSteps } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n    if (options.activationToken && availableSteps?.some(({ name }) => name === 'identify')) {\n      const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n      throw error;\n    // return { status: IdxStatus.FAILURE, error } as unknown as IdxTransaction; // TODO: wny not just throw the error?\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues,\n  ResetAuthenticatorValues,\n  ReEnrollAuthenticatorValues,\n} from './remediators';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthInterface, \n  IdxOptions, \n  IdxTransaction,\n} from '../types';\n\nexport type PasswordRecoveryOptions = IdxOptions \n  & IdentifyValues \n  & SelectAuthenticatorAuthenticateValues \n  & ChallengeAuthenticatorValues \n  & ResetAuthenticatorValues\n  & AuthenticatorVerificationDataValues\n  & ReEnrollAuthenticatorValues;\n\nexport async function recoverPassword(\n  authClient: OktaAuthInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { OktaAuth } from '..';\nimport {IdxTransactionMeta} from '../types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuth, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport {\n  IdentifyValues,\n  SelectAuthenticatorUnlockAccountValues,\n  SelectAuthenticatorAuthenticateValues,\n  ChallengeAuthenticatorValues,\n  AuthenticatorVerificationDataValues\n} from './remediators';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthInterface, \n  IdxOptions, \n  IdxTransaction,\n  IdxFeature,\n} from '../types';\n\nexport type AccountUnlockOptions = IdxOptions\n  & IdentifyValues\n  & SelectAuthenticatorUnlockAccountValues\n  & SelectAuthenticatorAuthenticateValues\n  & ChallengeAuthenticatorValues\n  & AuthenticatorVerificationDataValues;\n\nexport async function unlockAccount(\n  authClient: OktaAuthInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// BETA - SUBJECT TO CHANGE\n// Currently we must modify request headers using the single instance of `idx.client.interceptors` exported from IDX-JS\n// This means that multiple instances of OktaAuth will see the same header modifications\n// TODO: use AuthJS http agent for IDX API requests. OKTA-417473\nimport { OktaAuthInterface } from '../types';\nimport idx from './idx-js';\nexport function setGlobalRequestInterceptor(fn) {\n  idx.client.interceptors.request.use(fn);\n}\n\nexport function clearGlobalRequestInterceptor() {\n  idx.client.interceptors.request.clear();\n}\n\n// A factory which returns a function that can be passed to `setGlobalRequestInterceptor`\nexport function createGlobalRequestInterceptor(sdk: OktaAuthInterface) {\n  return function (requestConfig) {\n    // Set user-agent and any other custom headers set in the options\n    var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n    const headers = Object.assign({\n      ...oktaUserAgentHeader\n    }, sdk.options.headers);\n    Object.keys(headers).forEach(name => {\n      // X-Device-Token may only be specified if the /interact request includes a `client_secret`\n      // which indicates a trusted client which is allowed to present this information on behalf of the end user. \n      // https://oktainc.atlassian.net/browse/OKTA-441021\n      if (!sdk.options.clientSecret && name === 'X-Device-Token') {\n        return;\n      }\n      requestConfig.headers[name] = headers[name];\n    });\n  };\n}\n","/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from './features';\nexport class OktaUserAgent {\n  private environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    this.maybeAddNodeEnvironment();\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  private maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { createGlobalRequestInterceptor, setGlobalRequestInterceptor } from './idx/headers';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI;\n  static crypto: CryptoAPI;\n  static webauthn: WebauthnAPI;\n  features!: FeaturesAPI;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = [\n      // sync methods\n      'decode',\n      'isLoginRedirect',\n      // already bound\n      'getWithRedirect',\n      'parseFromUrl'\n    ];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    setGlobalRequestInterceptor(createGlobalRequestInterceptor(this)); // to pass custom headers to IDX endpoints\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  start() {\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n    this.serviceManager.start();\n  }\n\n  stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Hoist crypto utils to static type\nOktaAuth.crypto = crypto;\n\n// Hoist webauthn utils to static type\nOktaAuth.webauthn = webauthn;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"],"names":["CustomError","message","prototype","Error","AuthApiError","err","xhr","errorSummary","name","errorCode","errorLink","errorId","errorCauses","AuthPollStopError","AuthSdkError","msg","OAuthError","summary","isAuthApiError","obj","a","str","atob","b","btoa","c","crypto","stringToBase64Url","b64","base64ToBase64Url","replace","base64UrlToBase64","b64u","base64UrlToString","length","utf8","decodeURIComponent","escape","e","stringToBuffer","buffer","Uint8Array","i","charCodeAt","base64UrlDecode","base64UrlToBuffer","from","bufferToBase64Url","bin","s","byte","String","fromCharCode","getOidcHash","TextEncoder","encode","webcrypto","subtle","digest","then","arrayBuffer","intBuffer","firstHalf","hash","apply","getNativeConsole","window","console","undefined","getConsole","nativeConsole","log","warn","group","groupEnd","text","deprecate","deprecateWrap","fn","arguments","isoToUTCString","parts","match","isoTime","Date","UTC","isoDate","toUTCString","genRandomString","randomCharset","random","cl","Math","floor","delay","ms","resolve","setTimeout","bind","ctx","additionalArgs","Array","call","args","extend","obj1","objArray","forEach","prop","Object","hasOwnProperty","removeNils","cleaned","value","clone","JSON","parse","omit","newobj","props","p","find","collection","searchParams","item","found","getLink","linkName","altName","_links","link","isString","toString","isObject","isNumber","isFunction","isPromise","finally","isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","substring","toQueryString","key","push","encodeURIComponent","join","path","trimmed","verifyToken","idToken","format","algo","extractable","usages","use","importKey","cryptoKey","jwt","split","payload","b64Signature","signature","verify","STATE_TOKEN_KEY_NAME","DEFAULT_POLLING_DELAY","DEFAULT_MAX_CLOCK_SKEW","DEFAULT_CACHE_DURATION","REDIRECT_OAUTH_PARAMS_NAME","REDIRECT_STATE_COOKIE_NAME","REDIRECT_NONCE_COOKIE_NAME","TOKEN_STORAGE_NAME","CACHE_STORAGE_NAME","PKCE_STORAGE_NAME","TRANSACTION_STORAGE_NAME","SHARED_TRANSACTION_STORAGE_NAME","ORIGINAL_URI_STORAGE_NAME","IDX_RESPONSE_STORAGE_NAME","ACCESS_TOKEN_STORAGE_KEY","ID_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","REFERRER_PATH_STORAGE_KEY","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","DEFAULT_CODE_CHALLENGE_METHOD","IDX_API_VERSION","setRequestHeader","authClient","headerName","headerValue","options","headers","httpRequest","sdk","method","saveAuthnState","accessToken","withCredentials","storageUtil","storage","httpCache","storageManager","getHttpCache","cookies","cacheResponse","cacheContents","getStorage","cachedResponse","now","expiresAt","response","oktaUserAgentHeader","_oktaUserAgent","getHttpHeader","ajaxOptions","data","res","httpRequestClient","resp","responseText","stateToken","delete","set","updateStorage","catch","serverErr","status","transformErrorXHR","get","getIssuerOrigin","getOptions","post","postOptions","addStateToken","builtArgs","getStateToken","getPollFn","ref","rememberDevice","autoPush","transactionCallBack","pollLink","pollFn","opts","reject","href","isPolling","retryCount","recursivePoll","pollRes","factorResult","delayFn","AuthTransaction","delayLength","pow","interactionHandle","flattenEmbedded","cancel","link2fn","isArray","lk","hints","allow","factorType","provider","params","profile","updatePhone","postToTransaction","links2fns","fns","type","poll","objArr","o","ol","embedded","_embedded","transactionStatus","resumeTransaction","tx","exists","_get","introspectAuthn","transactionStep","transactionExists","dec2hex","dec","substr","getRandomString","ceil","getRandomValues","generateVerifier","prefix","verifier","computeChallenge","sessionExists","session","getSession","refresh","user","closeSession","refreshSession","setCookieAndRedirect","sessionToken","redirectUrl","location","assign","checkAccountSetupComplete","token","convertTokenParamsToOAuthParams","tokenParams","clientId","responseType","oauthParams","codeChallenge","codeChallengeMethod","display","idp","idpScope","loginHint","maxAge","nonce","prompt","redirectUri","responseMode","state","mayBeArray","scopes","scope","buildAuthorizeParams","oauthQueryParams","extraParams","validateOptions","authorizationCode","interactionCode","codeVerifier","getPostData","code","clientSecret","postToTokenEndpoint","urls","tokenUrl","postRefreshToken","refreshToken","client_id","grant_type","refresh_token","getWellKnown","issuer","authServerUri","getKey","kid","wellKnown","jwksUri","cachedKey","clearStorage","addListener","eventTarget","addEventListener","attachEvent","removeListener","removeEventListener","detachEvent","loadFrame","src","iframe","document","createElement","style","body","appendChild","loadPopup","title","popupTitle","appearance","open","addPostMessageListener","timeout","responseHandler","timeoutId","msgReceivedOrTimeout","origin","clearTimeout","generateState","generateNonce","getIssuer","getOAuthBaseUrl","getOAuthDomain","domain","getOAuthUrls","authorizeUrl","userinfoUrl","logoutUrl","revokeUrl","isWindowsPhone","isBrowser","isIE11OrLess","documentMode","getUserAgent","navigator","userAgent","isFingerprintSupported","agent","isPopupPostMessageSupported","isIE8or9","postMessage","isTokenVerifySupported","hasTextEncoder","isPKCESupported","isHTTPS","protocol","isLocalhost","hostname","getDefaultTokenParams","pkce","ignoreSignature","defaultRedirectUri","isInteractionRequiredError","error","oauthError","isAuthorizationCodeError","authApiError","errorResponse","responseJSON","hasTokensInHash","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","isRedirectUri","uri","authParams","isCodeFlow","getHashOrSearch","codeFlow","useQuery","search","isLoginRedirect","hasCode","isInteractionRequired","createOAuthMeta","oauthMeta","pkceMeta","assertPKCESupport","features","errorMessage","validateCodeChallengeMethod","wellKnownResponse","methods","preparePKCE","PKCE","prepareTokenParams","defaults","isSameRefreshToken","isRefreshTokenError","urlParamsToObject","plus2space","paramSplit","fragment","charAt","param","exec","validateClaims","claims","validationParams","aud","iss","iat","exp","ignoreLifetime","maxClockSkew","isObjectWithProperties","isOAuthTransactionMeta","isPKCETransactionMeta","isIdxTransactionMeta","isCustomAuthTransactionMeta","isAllStringValues","isTransactionMeta","IdxStatus","AuthenticatorKey","IdxFeature","isToken","isAccessToken","isIDToken","isRefreshToken","validateToken","decodeToken","decodedToken","header","revokeToken","token_type_hint","creds","exchangeCodeForTokens","getTokenOptions","handleResponseOptions","handleOAuthResponse","transactionManager","clear","configuredIssuer","validationOptions","sdkCrypto","valid","at_hash","validateResponse","interaction_code","tokenDict","expiresIn","expires_in","tokenType","token_type","access_token","id_token","accessJwt","decode","Number","idJwt","idTokenObj","tokens","getToken","popupWindow","sessionTokenOverrides","idpOverrides","requestUrl","endpoint","flowType","iframePromise","iframeEl","contains","parentElement","removeChild","oauthPromise","popupPromise","closePoller","setInterval","closed","clearInterval","close","getWithoutPrompt","renewTokensWithRefresh","refreshTokenObject","renewTokenParams","tokenResponse","tokenManager","updateRefreshToken","throwInvalidTokenError","getSingleToken","originalToken","renewToken","getTokensSync","renewTokens","getUserInfo","accessTokenObject","idTokenObject","getTokens","userInfo","sub","authenticateHeader","getResponseHeader","errorMatches","errorDescriptionMatches","errorDescription","getWithPopup","getWithRedirect","meta","save","oauth","_setLocation","removeHash","nativeHistory","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","pathname","removeSearch","getResponseMode","defaultResponseMode","parseOAuthResponseFromUrl","paramStr","cleanOAuthResponseFromUrl","load","getEnrolledCredentials","authenticatorEnrollments","credentials","enrollement","id","credentialId","buildCredentialCreationOptions","activationData","publicKey","rp","displayName","challenge","pubKeyCredParams","attestation","authenticatorSelection","excludeCredentials","buildCredentialRequestOptions","challengeData","userVerification","allowCredentials","getAttestation","credential","clientData","clientDataJSON","attestationObject","getAssertion","authenticatorData","signatureData","getPKCEStorage","browserHasLocalStorage","getLocalStorage","testStorage","browserHasSessionStorage","getSessionStorage","testStorageType","storageType","supported","getStorageByType","storageProvider","getCookieStorage","getInMemoryStorage","findStorageType","types","curType","nextType","shift","localStorage","sessionStorage","secure","sameSite","sessionCookie","getItem","setItem","removeItem","useSeparateCookies","k","existingValues","storageKey","valueToStore","inMemoryStore","cookieOptions","expires","Cookies","remove","SdkClock","localOffset","DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","expireEarlySeconds","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","emitter","storageOptions","getTokenStorage","clock","create","on","off","setExpireEventTimeoutAll","clearExpireEventTimeoutAll","expireTime","getExpireTime","emit","freshToken","oldToken","newValue","oldValue","oldTokens","getTokensFromStorageValue","newTokens","newToken","emitAdded","emitRemoved","clearExpireEventTimeout","expireEventWait","max","expireEventTimeout","emitExpired","tokenStorage","setExpireEventTimeout","setStorage","getSync","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","getTokenType","handleAdded","handleRenewed","emitRenewed","handleRemoved","existingTokens","getStorageKeyByType","existingToken","removedToken","renew","setTokens","tokenKey","emitError","pendingRemove","AutoRenewService","renewTimeQueue","onTokenExpiredHandler","firstTime","lastTime","shouldThrottleRenew","canStart","stop","started","SyncStorageService","storageListener","handleCrossTabsStorageChange","resetExpireEventTimeoutAll","emitEventsForCrossTabsStorageUpdate","syncTimeout","ServiceManager","defaultOptions","services","onLeaderDuplicate","onLeader","knownServices","svc","createService","startServices","elector","isLeader","hasLeader","some","srv","requiresLeadership","isLeaderRequired","startElector","stopElector","stopServices","isStarted","start","canUseLeaderElection","channel","broadcastChannelName","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","die","service","PromiseQueue","queue","running","thisObject","run","queueItem","fingerprint","listener","promise","source","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","isAuthenticated","AuthStateManager","_sdk","_pending","_authState","_logOptions","_prevAuthState","_setLogOptions","event","updateAuthState","transformAuthState","devMode","emitAuthStateChange","authState","finalPromise","origPromise","curPromise","getAuthState","cancelablePromise","PCancelable","_","onCancel","shouldReject","emitAndResolve","isCanceled","handler","SavedObject","storageName","storageString","logServerSideMemoryStorageWarning","StorageManager","storageManagerOptions","sectionName","overrideOptions","storageTypes","idx","getOptionsForSection","transactionStorage","getTransactionStorage","transaction","val","isRawIdxResponse","version","isIdxResponse","rawIdxState","MAX_ENTRY_LIFETIME","pruneSharedStorage","sharedStorage","getSharedTansactionStorage","entries","entry","age","dateCreated","saveTransactionToSharedStorage","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage","TransactionManager","legacyWidgetSupport","saveNonceCookie","saveStateCookie","saveParamsCookie","enableSharedStorage","saveLastResponse","clearIdxResponse","clearSharedStorage","clearLegacyOAuthParams","clearLegacyPKCE","muteWarning","cookieStorage","loadLegacyOAuthParams","loadLegacyPKCE","getLegacyPKCEStorage","getLegacyOAuthParamsStorage","idxResponse","getIdxResponseStorage","assertValidConfig","isUrlRegex","RegExp","readData","toLowerCase","json","formatResult","pair","result","fetchRequest","contentType","fetch","crossFetch","fetchPromise","ok","STORAGE_MANAGER_OPTIONS","cache","getCookieSettings","cookieSettings","getDefaultOptions","mergeOptions","buildOptions","postLogoutRedirectUri","useInteractionCodeFlow","restoreOriginalUri","flow","recoveryToken","activationToken","Interceptor","before","handlers","HttpClient","interceptors","request","target","requestOptions","interceptor","isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","divideActionParamsByMutability","actionList","neededParams","defaultParams","immutableParams","generateDirectFetch","actionDefinition","toPersist","accepts","respJson","makeIdxState","stepUp","generateIdxAction","generator","generateRemediationFunctions","remediationValue","remediation","SKIP_FIELDS","parseNonRemediations","actions","context","fieldIsObject","rel","_a","fieldValue","info","subField","expandRelatesTo","query","JSONPath","innerValue","convertRemediationAction","remediationActions","actionFn","parseIdxResponse","remediationData","remediations","rawIdxResponse","neededToProceed","proceed","remediationChoice","paramsFromUser","remediationChoiceObject","findCode","successWithInteractionCode","parsersForVersion","v1","validateVersionConfig","cleanVersion","parseAndReject","introspect","stateHandle","accept","interact","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","interaction_handle","LATEST_SUPPORTED_IDX_API_VERSION","interactParams","details","idxState","client","createTransactionMeta","hasSavedInteractionHandle","savedMeta","getSavedTransactionMeta","isTransactionMetaValid","getTransactionMeta","validExistingMeta","saveTransactionMeta","clearTransactionMeta","keys","isTransactionMetaValidForOptions","isTransactionMetaValidForFlow","shouldValidateFlow","mismatch","getResponse","newMeta","loadIdxResponse","getAllValues","idxRemediation","r","getRequiredValues","required","cur","titleCase","toUpperCase","getAuthenticatorFromRemediation","Remediator","values","formatAuthenticators","authenticators","authenticator","hasAuthenticatorInList","authenticatorsData","acc","needed","hasData","allValues","getData","_context","getName","inputs","getInputs","getAuthenticator","inputFromRemediation","input","aliases","relatesTo","form","messages","Authenticator","VerificationCodeAuthenticator","verificationCode","otp","passcode","idxRemediationValue","OktaVerifyTotp","totp","OktaPassword","password","SecurityQuestionEnrollment","questionKey","question","answer","require","label","SecurityQuestionVerification","contextualData","enrolledQuestion","WebauthnEnrollment","visible","WebauthnVerification","OKTA_PASSWORD","SECURITY_QUESTION","OKTA_VERIFY","WEBAUTHN","VerifyAuthenticator","nextStep","canVerify","mapCredentials","EnrollAuthenticator","EnrollPoll","Boolean","startPolling","common","currentAuthenticator","trimmedValues","valueKey","SelectEnrollmentChannel","getChannels","EnrollmentChannelData","email","phoneNumber","ChallengeAuthenticator","ChallengePoll","ResetAuthenticator","EnrollProfile","userProfileFromValues","userProfile","userProfileFromRemediation","canRemediate","curr","profileAttributes","attributeNames","attributeValues","attributeName","errorRemediation","errors","Identify","identifier","ReEnrollAuthenticator","newPassword","challengeType","RedirectIdp","SelectAuthenticator","option","authenticatorFromRemediation","matchedOption","findMatchedOption","selectedOption","selectedAuthenticator","SelectAuthenticatorAuthenticate","hasPasswordInOptions","SelectAuthenticatorEnroll","SelectAuthenticatorUnlockAccount","authenticatorMap","methodTypeOption","methodTypeValue","methodType","SelectEnrollProfile","AuthenticatorData","formatAuthenticatorData","getAuthenticatorData","mapAuthenticatorDataFromValues","getMethodTypes","AuthenticatorVerificationData","shouldProceedWithEmailAuthenticator","enrollmentId","AuthenticatorEnrollmentData","Skip","skip","getRemediator","idxRemediations","remediators","remediator","step","T","remediatorCandidates","isRemeditionInFlow","isTerminalResponse","canSkipFn","canResendFn","actionName","getIdxMessages","globalMessages","fieldMessages","getMessages","getNextStep","canSkip","canResend","handleIdxError","terminal","getActionFromValues","resend","removeActionFromValues","remediate","actionFromValues","valuesWithoutExecutedAction","canceled","remediationAction","getValuesAfterProceed","AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","getEnabledFeatures","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","remediatorMap","map","remediatorClass","remediationName","PENDING","shouldClearTransaction","autoRemediate","getFlow","setFlow","flowSpec","metaFromResp","interactResponse","enabledFeatures","availableSteps","idxResponseFromResp","nextStepFromResp","messagesFromResp","saveIdxResponse","TERMINAL","CANCELED","SUCCESS","FAILURE","authenticate","EmailVerifyCallbackError","isEmailVerifyCallbackError","isEmailVerifyCallback","urlPath","parseEmailVerifyCallback","handleEmailVerifyCallback","canProceed","availablePollingRemeditaions","startTransaction","register","recoverPassword","handleInteractionCodeRedirect","savedState","unlockAccount","setGlobalRequestInterceptor","createGlobalRequestInterceptor","requestConfig","OktaUserAgent","environments","env","maybeAddNodeEnvironment","process","versions","node","OktaAuth","resume","handleLogin","_tokenQueue","useQueue","getWithRedirectFn","getWithRedirectApi","parseFromUrlFn","parseFromUrlApi","history","revoke","syncMethods","boundStartTransaction","http","Emitter","authStateManager","serviceManager","signInWithCredentials","_postToTransaction","sendFingerprint","originalUri","additionalParams","setOriginalUri","accessTokenKey","refreshTokenKey","idTokenHint","logoutUri","defaultUri","currentUri","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","shouldRenew","onExpiredToken","shouldRemove","hasExpired","browserStorage","getOriginalUriStorage","getOriginalUri","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","hasResponseType","webauthn","constants"],"mappings":"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"}