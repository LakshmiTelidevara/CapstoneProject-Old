{"version":3,"sources":["../../../../lib/idx/idx-js/introspect.ts"],"names":["parseAndReject","response","json","then","err","reject","introspect","withCredentials","domain","interactionHandle","stateHandle","version","target","body","stateToken","headers","accept","credentials","ok"],"mappings":";;;;;;;;;;AAYA;;AACA;;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA,MAAMA,cAAc,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBC,IAAhB,CAAsBC,GAAG,IAAI,iBAAQC,MAAR,CAAeD,GAAf,CAA7B,CAAnC;;AAEA,MAAME,UAAU,GAAG,eAAeA,UAAf,CAA0B;AAC3CC,EAAAA,eAD2C;AAE3CC,EAAAA,MAF2C;AAG3CC,EAAAA,iBAH2C;AAI3CC,EAAAA,WAJ2C;AAK3CC,EAAAA;AAL2C,CAA1B,EAMG;AACpB,mCAAsBA,OAAtB;AACA,QAAMC,MAAM,GAAI,GAAEJ,MAAO,qBAAzB;AACA,QAAMK,IAAI,GAAGH,WAAW,GAAG;AAAEI,IAAAA,UAAU,EAAEJ;AAAd,GAAH,GAAiC;AAAED,IAAAA;AAAF,GAAzD;AACA,QAAMM,OAAO,GAAG;AACd,oBAAiB,sCAAqCJ,OAAQ,EADhD;AACmD;AACjEK,IAAAA,MAAM,EAAG,sCAAqCL,OAAQ;AAFxC,GAAhB;AAIA,QAAMM,WAAW,GAAGV,eAAe,KAAK,KAApB,GAA4B,MAA5B,GAAqC,SAAzD;AACA,SAAO,qBAAQK,MAAR,EAAgB;AAAEK,IAAAA,WAAF;AAAeF,IAAAA,OAAf;AAAwBF,IAAAA,IAAI,EAAE,wBAAeA,IAAf;AAA9B,GAAhB,EACJV,IADI,CACEF,QAAQ,IAAIA,QAAQ,CAACiB,EAAT,GAAcjB,QAAQ,CAACC,IAAT,EAAd,GAAgCF,cAAc,CAAEC,QAAF,CAD5D,CAAP;AAED,CAjBD;;eAmBeK,U","sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { request } from './client';\nimport { validateVersionConfig } from './util';\n\nexport interface IntrospectOptions {\n  domain: string;\n  withCredentials?: boolean;\n  interactionHandle?: string;\n  stateHandle?: string;\n  version?: string;\n}\n\nconst parseAndReject = response => response.json().then( err => Promise.reject(err) );\n\nconst introspect = async function introspect({\n  withCredentials,\n  domain,\n  interactionHandle,\n  stateHandle,\n  version,\n}: IntrospectOptions) {\n  validateVersionConfig(version);\n  const target = `${domain}/idp/idx/introspect`;\n  const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n  const headers = {\n    'content-type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n    accept: `application/ion+json; okta-version=${version}`,\n  };\n  const credentials = withCredentials === false ? 'omit' : 'include';\n  return request(target, { credentials, headers, body: JSON.stringify(body) })\n    .then( response => response.ok ? response.json() : parseAndReject( response ) );\n};\n\nexport default introspect;\n"],"file":"introspect.js"}